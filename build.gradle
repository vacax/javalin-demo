plugins {
    id 'java'
    id 'application'
    id 'com.github.johnrengelman.shadow' version '7.1.2'
}

group 'edu.pucmm.eict'
version '1.0-SNAPSHOT'

String openapi =  "5.3.2"

mainClassName='edu.pucmm.eict.Main'

repositories {
    mavenCentral()
    maven{
        url "https://maven.reposilite.com/snapshots"
    }
}

dependencies {
    //Libreria test
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'

    //dependencia de Javalin
    implementation 'io.javalin:javalin:5.6.1'

    //manejo de log.
    implementation "org.slf4j:slf4j-simple:2.0.3"

    //libreria jsoup.
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.15.3'

    //Procesamiento JSON.
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.13.4.1'

    // En la versi√≥n 5.3.X separaron las clases del renderizado en otro proyecto
    implementation "io.javalin:javalin-rendering:5.6.0"

    //sistemas de plantilla:
    implementation 'org.freemarker:freemarker:2.3.32'
    implementation 'org.thymeleaf:thymeleaf:3.1.1.RELEASE'
    implementation 'org.apache.velocity:velocity-engine-core:2.3'

    //libreria para SOAP de Jetty https://mvnrepository.com/artifact/org.eclipse.jetty/jetty-http-spi
    implementation group: 'org.eclipse.jetty', name: 'jetty-http-spi', version: '11.0.13'

    //incluyendo las librerias de javax.ee en java 11.
    //https://www.baeldung.com/java-soap-web-service
    implementation "jakarta.servlet:jakarta.servlet-api:4.0.3"
    implementation "jakarta.activation:jakarta.activation-api:1.2.2"
    implementation "jakarta.xml.ws:jakarta.xml.ws-api:4.0.0"
    implementation "jakarta.xml.soap:jakarta.xml.soap-api:3.0.0"
    implementation "com.sun.xml.messaging.saaj:saaj-impl:2.0.1"
    implementation "com.sun.xml.ws:jaxws-rt:3.0.2"
    //implementation "com.sun.xml.ws:jaxws-ri:3.0.2"
    //implementation "org.glassfish.jaxb:jaxb-runtime:3.0.2"

    // //Agregando el OpenApi, ver https://github.com/javalin/javalin-openapi/wiki
    annotationProcessor("io.javalin.community.openapi:openapi-annotation-processor:$openapi")
    implementation("io.javalin.community.openapi:javalin-openapi-plugin:$openapi") // for /openapi route with JSON scheme
    implementation("io.javalin.community.openapi:javalin-swagger-plugin:$openapi") // for Swagger UI
    implementation("io.javalin.community.openapi:javalin-redoc-plugin:$openapi") // for ReDoc UI
}

shadowJar{
    archiveBaseName.set("app")
    archiveClassifier.set('')
    archiveVersion.set('')
}

/**
 * tarea necesaria para heroku si optamos por la tarea de Shadowjar
 * en el archivo Procfile debe estar el siguiente comando:
 * web: java -jar build/libs/app.jar
 */
task stage {
    dependsOn shadowJar
}